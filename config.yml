dest: "./backups"
printDumpLogs: false

# pg_dump
dump:
  jobs: 5
  dumpGlobals: true
  dumpConfigs: true
  saveDumpLog: true
  dbs:
    - host: localhost
      port: 5432
      username: postgres
      password: postgres
      dbname: bookstore
      opts:
        connect_timeout: "5"
        sslmode: "disable"
      schemas: [ ]
      excludeSchemas: [ ]
      tables: [ ]
      excludeTables: [ ]

    - host: localhost
      port: 5432
      username: postgres
      password: postgres
      dbname: demo

    - host: 10.40.240.189
      port: 5432
      username: postgres
      password: postgres
      dbname: keycloak_base

    - host: 10.40.240.165
      port: 30201
      username: postgres
      password: postgres
      dbname: vault

# pg_basebackup
#base:
#  compress: true
#  clusters:
#    - host: localhost
#      port: 5432
#      username: postgres
#      password: postgres
#      opts:
#        connect_timeout: "5"
#        sslmode: "disable"

retention:
  enable: true
  period: 1m
  keepLast: 1

logger:
  # text/json
  format: text
  # debug info warn error
  level: debug

upload:
  retryAttempts: 2
  maxConcurrency: 8
  sftp:
    enable: true
    host: "10.40.240.194"
    port: "22"
    user: "ansible"
    pkeyPath: "${SSH_PKEY}"
    passphrase: ""
    dest: "/home/ansible/backups"
    # if set, all local rules will also be applied to remote storage
    # it means, that remote will be synced with local
    keepSyncedWithLocalRetention: true
  s3:
    enable: true
    endpointUrl: "${AWS_ENDPOINT_URL}"
    accessKeyId: "${AWS_ACCESS_KEY_ID}"
    secretAccessKey: "${AWS_SECRET_ACCESS_KEY}"
    bucket: "tmp"
    region: "main"
    usePathStyle: true
    disableSSL: true
    prefix: ""
    # if set, all local rules will also be applied to remote storage
    # it means, that remote will be synced with local
    keepSyncedWithLocalRetention: true
